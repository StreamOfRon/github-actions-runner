name: GitHub Actions Runner in Docker - Latest
on:
  push:
    paths-ignore:
      - Dockerfile.base
      - README.md
    branches:
      - master
      - develop
  workflow_dispatch:
#  schedule:
#    - cron:  '59 23 * * *'

permissions:
  contents: read
  packages: write

jobs:
  ubuntu_deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release: [jammy]
      fail-fast: false
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@master
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Copy Dockerfile
        run: cp Dockerfile Dockerfile.ubuntu-${{ matrix.release }}; sed -i.bak "s/FROM.*/FROM ${ORG}\/github-runner-base:ubuntu-${{ matrix.release }}/" Dockerfile.ubuntu-${{ matrix.release }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/streamofron/github-runner-base
          tags: |
            type=raw,value=ubuntu-latest,enable=${{ contains(matrix.release, 'bookworm') }}
            type=raw,value=ubuntu-${{ matrix.release }},enable={{is_default_branch}}
            type=sha,prefix=ubuntu,enable=true
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.ubuntu-${{ matrix.release }}
          pull: true
          push: true
          tags: ${{env.ORG}}/github-runner:ubuntu-${{ matrix.release }},ghcr.io/${{ github.repository }}:ubuntu-${{ matrix.release }}
          platforms: linux/amd64 #,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  debian_deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release: [bookworm]
      fail-fast: false
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@master
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Copy Dockerfile
        run: cp Dockerfile Dockerfile.debian-${{ matrix.release }}; sed -i.bak "s/FROM.*/FROM ${ORG}\/github-runner-base:debian-${{ matrix.release }}/" Dockerfile.debian-${{ matrix.release }}
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/streamofron/github-runner-base
          tags: |
            type=raw,value=debian-latest,enable=${{ contains(matrix.release, 'bookworm') }}
            type=raw,value=debian-${{ matrix.release }},enable={{is_default_branch}}
            type=sha,prefix=debian,enable=true
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.debian-${{ matrix.release }}
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64 #,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
